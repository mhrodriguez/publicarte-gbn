<?php
/**
 * Created by PhpStorm.
 * User: davatar
 * Date: 6/9/17
 * Time: 12:39 a.m.
 */

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use \AppBundle\Entity\Venta;
use \AppBundle\Entity\VentaItem;
use \AppBundle\Entity\VentaItemPaquete;

/**
 * CorteCajaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CorteCajaRepository extends EntityRepository
{
    private $doctrineManager;

    public function setDoctrineManager($_doctrineManager)
    {
        $this->doctrineManager = $_doctrineManager;
    }

    public function obtenerCortecajasDeEmpresaPorFecha($empresa, $fechaInicio, $fechaFin)
    {
        $resultset = $this->getEntityManager()
            ->createQuery(
                "SELECT v FROM AppBundle:Cortecaja v
             JOIN v.empresa e
             WHERE e.id = :idEmpresa
             AND v.fecha >= :fechaInicio AND v.fecha <= :fechaFin
             ORDER BY v.fecha ASC")
            ->setParameter("fechaInicio", $fechaInicio)
            ->setParameter("fechaFin", $fechaFin)
            ->setParameter("idEmpresa", $empresa->getId())
            ->getResult();

        return $resultset;
    }

    public function obtenerProductosDeVentasDeCortecaja($corteCaja)
    {
        $venta = new Venta();
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("SELECT i.descripcion, i.precio, SUM(i.cantidad) as cantidad, SUM(i.total) as total FROM venta v
        INNER JOIN venta_item vi ON vi.id_venta = v.id
        INNER JOIN ventaitem i ON i.id = vi.id_ventaitem
        WHERE v.id_cortecaja = :idCorteCaja
        GROUP BY i.descripcion, i.precio
        ORDER BY cantidad DESC"
        );
        $statement->bindValue('idCorteCaja', $corteCaja->getId());
        $statement->execute();

        $resultset = $statement->fetchAll();

        foreach ($resultset as $row)
        {
            $ventaItem = new VentaItem();

            $ventaItem->setDescripcion($row["descripcion"]);
            $ventaItem->setPrecio($row["precio"]);
            $ventaItem->setCantidad($row["cantidad"]);
            $ventaItem->setTotal($row["total"]);

            $venta->addItem($ventaItem);
        }

        // Paquete
        $statement = $connection->prepare("SELECT i.descripcion, SUM(i.cantidad) as cantidad, SUM(i.total) as total FROM venta v
        INNER JOIN venta_itempaquete vi ON vi.id_venta = v.id
        INNER JOIN ventaitempaquete i ON i.id = vi.id_ventaitempaquete
        WHERE v.id_cortecaja = :idCorteCaja
        GROUP BY i.descripcion"
        );
        $statement->bindValue('idCorteCaja', $corteCaja->getId());
        $statement->execute();

        $resultset = $statement->fetchAll();

        foreach ($resultset as $row)
        {
            $ventaItemPaquete = new VentaItemPaquete();

            $ventaItemPaquete->setDescripcion($row["descripcion"]);
            $ventaItemPaquete->setCantidad($row["cantidad"]);
            $ventaItemPaquete->setTotal($row["total"]);

            $venta->addItempaquete($ventaItemPaquete);
        }

        return $venta;
    }
}